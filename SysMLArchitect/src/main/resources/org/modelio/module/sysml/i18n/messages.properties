#Generated by ResourceBundle Editor (http://essiembre.github.io/eclipse-rbe/)
#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)
#
#Fri Jul 15 11:03:23 CEST 2011

ActivityPaletteGroup.Common          = Common
ActivityPaletteGroup.Control         = Control nodes
ActivityPaletteGroup.Data            = Data nodes
ActivityPaletteGroup.Event           = Events
ActivityPaletteGroup.Flow            = Flows
ActivityPaletteGroup.InformationFlow = Information Flows
ActivityPaletteGroup.Partition       = Partitions

Error.Diagnostic.CreateAllocateDependency       = An Allocation can only be created between two Model Elements.
Error.Diagnostic.CreateBlock                    = A block can only be created in a package or in a block.
Error.Diagnostic.CreateConformFirstAlreadyExist = Only one "Conform" dependency can be created from a view.\nThe current view has already a "Conform" dependency to the "{0}" viewpoint.
Error.Diagnostic.CreateConformFirstNotAView     = A "Conform" dependency can only be created from a view.
Error.Diagnostic.CreateConformSecond            = A view can have a "Conform" dependency only to a viewpoint.
Error.Diagnostic.CreateConstraintBlock          = A constraint block can only be created in a package.
Error.Diagnostic.CreateFlowPort                 = A flow port can only be created in an class, an instance (or a part), a component, an artifact, a node or a signal.
Error.Diagnostic.CreateFlowSpecification        = A flow specification can only be created in a package, a class, \na component, an interface or a template parameter.
Error.Diagnostic.CreateItemFlowFirst            = An item flow can only be created from a block or a flowport
Error.Diagnostic.CreateItemFlowSecondBlock      = A block can only depend from another block.
Error.Diagnostic.CreateItemFlowSecondClass      = A item flow can only be created between two port or two classes.
Error.Diagnostic.CreateItemFlowSecondFlowPort   = A flow port can only depend from another flow port.
Error.Diagnostic.CreateItemFlowSecondPort       = A item flow can only be created between two port or two classes.
Error.Diagnostic.CreatePort                     = This kind of MObject can not own a Port.
Error.Diagnostic.CreateProblemNote              = A Problem Note can only be created on a ModelElement.
Error.Diagnostic.CreateRationaleNote            = A Rationale Note can only be created on a ModelElement.
Error.Diagnostic.CreateValueType                = A value type can only be created in a package.
Error.Diagnostic.CreateView                     = A view can only be created in a package.
Error.Diagnostic.CreateViewpoint                = A viewpoint can only be created in a package.
Error.Diagnostic.ElementReadOnly                = The MObject is locked and cannot be modified.
Error.NoteTypeNotFound                          = Error: the "{0}" note type was not found.\nPlease, deploy the "SysML" MDA component.
Error.StereotypeNotFound                        = Error: the "{0}" stereotype was not found.\nPlease, deploy the "SysML" MDA component.
Error.TagTypeNotFound                           = Error: a tagged value type was not found.\nPlease, deploy the "SysML" MDA component.

Info.Session.AddStereotype               = Add the "{0}" stereotype
Info.Session.ChangeProperties            = Property modification
Info.Session.ChangeViewpointProperties   = Change properties
Info.Session.Create                      = Create {0} 
Info.Session.CreateAllocateDependency    = Create an Allocation
Info.Session.CreateBlock                 = Block creation
Info.Session.CreateBlockDiagram          = Block diagram creation
Info.Session.CreateCompositionDependency = Composition dependency creation
Info.Session.CreateConformDependency     = "Conform" dependency creation
Info.Session.CreateConstraintBlock       = Constraint Block creation
Info.Session.CreateFlowPort              = Flow port creation
Info.Session.CreateFlowSpecification     = Flow specification creation
Info.Session.CreateInternalBlockDiagram  = Internal block diagram creation
Info.Session.CreateParametricDiagram     = Parametric diagram creation
Info.Session.CreateProblemNote           = Create a Problem Note
Info.Session.CreateQuantityKind          = QuantityKind creation
Info.Session.CreateRationaleNote         = Create Rationale Note
Info.Session.CreateUnit                  = Unit creation
Info.Session.CreateValueType             = Value type creation
Info.Session.CreateView                  = View creation
Info.Session.CreateViewpoint             = Viewpoint creation

Mdac.Gui.Init           = Initialization of the 'SysML' module
Mdac.PropertyPage.Label = SysML
Mdac.SysML.Label        = SysML
Mdac.start.modeler      = No license available for "{0}" module.\r\n\r\nDetail:\r\nModelio Open Source does not support commercial modules.\r\n\r\nFor more information, please contact Modeliosoft support team (support@modeliosoft.com).
Mdac.start.module       = No license available for "{0}" module.\r\n\r\nDetail:\r\nNo valid feature found.\r\n\r\nFor more information, please contact Modeliosoft support team (support@modeliosoft.com).
Mdac.start.title        = Couldn''t start "{0}".

ScopePaletteGroup.Links = Links
ScopePaletteGroup.Nodes = Nodes

SequencePaletteGroup.Common          = Common
SequencePaletteGroup.InformationFlow = Information Flows

StatePaletteGroup.Common = Common

StatikPaletteGroup.Class           = Class model
StatikPaletteGroup.Common          = Common
StatikPaletteGroup.Component       = Component model
StatikPaletteGroup.Import          = Imports links
StatikPaletteGroup.InformationFlow = Information Flows
StatikPaletteGroup.Instance        = Instance model
StatikPaletteGroup.Package         = Package

SysMLPaletteGroup.Bloc                = Blocks
SysMLPaletteGroup.Dependency          = Links
SysMLPaletteGroup.Freedrawing         = Free drawing
SysMLPaletteGroup.Import              = Imports links
SysMLPaletteGroup.InformationFlow     = Information Flows
SysMLPaletteGroup.Instance            = Instance model
SysMLPaletteGroup.NotesAndConstraints = Notes and contraints
SysMLPaletteGroup.Port                = Ports

Ui.Allocated.From                                                      = Allocated
Ui.Allocated.To                                                        = Allocated to
Ui.Command.ActivityExplorerCommand.Label                               = Activity
Ui.Command.ActivityExplorerCommand.Tooltip                             = Create an Activity
Ui.Command.ActorExplorerCommand.Label                                  = Actor
Ui.Command.ActorExplorerCommand.Tooltip                                = Create an Actor
Ui.Command.AllocateDependencyDiagramCommand.Label                      = Allocation
Ui.Command.AllocateDependencyDiagramCommand.Tooltip                    = Create an Allocate Link
Ui.Command.AllocateDiagramCommand.Label                                = Allocate
Ui.Command.BindingConnectorDiagramCommand.Label                        = Binding
Ui.Command.BindingConnectorDiagramCommand.Tooltip                      = Create a Binding connector
Ui.Command.BlockDiagram.Name                                           = {0} Block diagram
Ui.Command.BlockDiagramCommand.Label                                   = Block
Ui.Command.BlockDiagramCommand.Tooltip                                 = Create a Block
Ui.Command.BlockDiagramExplorerCommand.Details                         = The Block Diagram in SysML defines features of blocks and relationships between blocks such as associations, generalizations, and dependencies.\r\n It captures the definition of blocks in terms of properties and operations, and relationships such as a system hierarchy or a system classification tree.
Ui.Command.BlockDiagramExplorerCommand.Information                     = Create a Block diagram\u0009
Ui.Command.BlockDiagramExplorerCommand.Label                           = Block diagram
Ui.Command.BlockDiagramExplorerCommand.Name                            = {0} Block diagram
Ui.Command.BlockDiagramExplorerCommand.Tooltip                         = Create a Block diagram
Ui.Command.BlockExplorerCommand.Label                                  = Block
Ui.Command.BlockExplorerCommand.Tooltip                                = Create a Block
Ui.Command.ClassDiagramExplorerCommand.Label                           = Class/Package diagram
Ui.Command.ClassDiagramExplorerCommand.Tooltip                         = Create a class/package diagram
Ui.Command.ConformDependencyDiagramCommand.Label                       = Conform
Ui.Command.ConformDependencyDiagramCommand.Tooltip                     = Create a Conform Link
Ui.Command.ConformDiagramCommand.Label                                 = Conform
Ui.Command.ConnectorPropertyDiagramCommand.Label                       = Connector Property
Ui.Command.ConnectorPropertyDiagramCommand.Tooltip                     = Create a Connector Property
Ui.Command.ConnectorPropertyExplorerCommand.Label                      = Connector Property
Ui.Command.ConnectorPropertyExplorerCommand.Tooltip                    = Create a Connector Property
Ui.Command.ConstraintBlockDiagramCommand.Label                         = Constraint Block
Ui.Command.ConstraintBlockDiagramCommand.Tooltip                       = Create a Constraint Block
Ui.Command.ConstraintBlockExplorerCommand.Label                        = Constraint Block
Ui.Command.ConstraintBlockExplorerCommand.Tooltip                      = Create a Constraint Block
Ui.Command.ConstraintPropertyDiagramCommand.Label                      = Constraint Property
Ui.Command.ConstraintPropertyDiagramCommand.Tooltip                    = Create a Constraint Property
Ui.Command.ConstraintPropertyExplorerCommand.Label                     = Constraint Property
Ui.Command.ConstraintPropertyExplorerCommand.Tooltip                   = Create a Constraint Property
Ui.Command.ContinuousEdgeDiagramCommand.Label                          = Continuous
Ui.Command.ContinuousEdgeDiagramCommand.Tooltip                        = Create a Continuous Flow
Ui.Command.ContinuousExplorerCommand.Label                             = Continuous
Ui.Command.ContinuousExplorerCommand.Tooltip                           = Create a Continuous Parameter
Ui.Command.ContinuousParameterDiagramCommand.Label                     = Continuous
Ui.Command.ContinuousParameterDiagramCommand.Tooltip                   = Create a Continuous Parameter
Ui.Command.ContinuousParameterExplorerCommand.Label                    = Continuous
Ui.Command.ContinuousParameterExplorerCommand.Tooltip                  = Create a Continuous Parameter
Ui.Command.ControlOperatorDiagramCommand.Label                         = Control Operator
Ui.Command.ControlOperatorDiagramCommand.Tooltip                       = Create a Control Operator
Ui.Command.ControlOperatorExplorerCommand.Label                        = Control Operator
Ui.Command.ControlOperatorExplorerCommand.Tooltip                      = Create a Control Operator
Ui.Command.DiscreteEdgeDiagramCommand.Label                            = Discrete
Ui.Command.DiscreteEdgeDiagramCommand.Tooltip                          = Create a Discrete Flow
Ui.Command.DiscreteExplorerCommand.Label                               = Discrete
Ui.Command.DiscreteExplorerCommand.Tooltip                             = Create a Discrete Parameter
Ui.Command.DiscreteParameterDiagramCommand.Label                       = Discrete
Ui.Command.DiscreteParameterDiagramCommand.Tooltip                     = Create a Discrete Parameter
Ui.Command.DistributedPropertyDiagramCommand.Label                     = Distributed Property
Ui.Command.DistributedPropertyDiagramCommand.Tooltip                   = Create a Distributed Property
Ui.Command.DistributedPropertyExplorerCommand.Label                    = Distributed Property
Ui.Command.DistributedPropertyExplorerCommand.Tooltip                  = Create a Distributed Property
Ui.Command.EnumerationExplorerCommand.Label                            = Enumeration
Ui.Command.EnumerationExplorerCommand.Tooltip                          = Create an Enumeration
Ui.Command.EnumerationLiteralExplorerCommand.Label                     = EnumerationLiteral
Ui.Command.EnumerationLiteralExplorerCommand.Tooltip                   = Create an EnumerationLiteral
Ui.Command.FlowPortDiagramCommand.Label                                = Flow Port
Ui.Command.FlowPortDiagramCommand.Tooltip                              = Create a Flow Port
Ui.Command.FlowPortExplorerCommand.Label                               = Flow Port
Ui.Command.FlowPortExplorerCommand.Tooltip                             = Create a Flow Port
Ui.Command.FlowPropertyDiagramCommand.Label                            = Flow Property
Ui.Command.FlowPropertyDiagramCommand.Tooltip                          = Create a Flow Property
Ui.Command.FlowPropertyExplorerCommand.Label                           = Flow Property
Ui.Command.FlowPropertyExplorerCommand.Tooltip                         = Create a Flow Property
Ui.Command.FlowSpecificationDiagramCommand.Label                       = Flow Specification
Ui.Command.FlowSpecificationDiagramCommand.Tooltip                     = Create a Flow Specification
Ui.Command.FlowSpecificationExplorerCommand.Label                      = Flow Specification
Ui.Command.FlowSpecificationExplorerCommand.Tooltip                    = Create a Flow Specification
Ui.Command.InteractionExplorerCommand.Label                            = Interaction
Ui.Command.InteractionExplorerCommand.Tooltip                          = Create an Interaction
Ui.Command.InternalBlockDiagram.Name                                   = {0} Internal Block diagram
Ui.Command.InternalBlockDiagramExplorerCommand.Details                 = The Internal Block Diagram in SysML captures the internal structure of a block in terms of properties and connectors between properties.
Ui.Command.InternalBlockDiagramExplorerCommand.Information             = Create an Internal Block diagram
Ui.Command.InternalBlockDiagramExplorerCommand.Label                   = Internal Block diagram
Ui.Command.InternalBlockDiagramExplorerCommand.Name                    = {0} Internal Block diagram
Ui.Command.InternalBlockDiagramExplorerCommand.Tooltip                 = Create an Internal Block diagram
Ui.Command.ItemFlowDiagramCommand.Label                                = Item Flow
Ui.Command.ItemFlowDiagramCommand.Tooltip                              = Create an Item Flow
Ui.Command.OperationExplorerCommand.Label                              = Operation
Ui.Command.OperationExplorerCommand.Tooltip                            = Create an Operation
Ui.Command.OptionalDiagramCommand.Label                                = Optional
Ui.Command.OptionalDiagramCommand.Tooltip                              = Create an Optional
Ui.Command.OptionalExplorerCommand.Label                               = Optional
Ui.Command.OptionalExplorerCommand.Tooltip                             = Create an Optional
Ui.Command.PackageDiagram.Name                                         = {0} Package diagram
Ui.Command.PackageDiagramExplorerCommand.Details                       = The package diagram depicts the dependencies between the packages.
Ui.Command.PackageDiagramExplorerCommand.Information                   = Create a Package diagram
Ui.Command.PackageDiagramExplorerCommand.Label                         = Package diagram
Ui.Command.PackageDiagramExplorerCommand.Name                          = {0} Package diagram
Ui.Command.PackageDiagramExplorerCommand.Tooltip                       = Create a package diagram
Ui.Command.ParameterExplorerCommand.Label                              = Parameter
Ui.Command.ParameterExplorerCommand.Tooltip                            = Create a Parameter
Ui.Command.ParametricDiagram.Name                                      = {0} Parametric diagram
Ui.Command.ParametricDiagramExplorerCommand.Details                    = The parametric diagram describes the constraints among the properties associated with blocks.\r\nThis diagram is used to integrate behavior and structure models with engineering analysis models such as performance, reliability, and mass property models. 
Ui.Command.ParametricDiagramExplorerCommand.Information                = Create a Parametric diagram
Ui.Command.ParametricDiagramExplorerCommand.Label                      = Parametric diagram
Ui.Command.ParametricDiagramExplorerCommand.Name                       = {0} Parametric diagram
Ui.Command.ParametricDiagramExplorerCommand.Tooltip                    = Create a Parametric diagram
Ui.Command.PartExplorerCommand.Label                                   = Part
Ui.Command.PartExplorerCommand.Tooltip                                 = Create a part
Ui.Command.ParticipantPropertyDiagramCommand.Label                     = Participant Property
Ui.Command.ParticipantPropertyDiagramCommand.Tooltip                   = Create a Participant Property
Ui.Command.ParticipantPropertyExplorerCommand.Label                    = Participant Property
Ui.Command.ParticipantPropertyExplorerCommand.Tooltip                  = Create a Participant Property
Ui.Command.PortExplorerCommand.Label                                   = Port
Ui.Command.PortExplorerCommand.Tooltip                                 = Create a Port
Ui.Command.ProbabilityDiagramCommand.Label                             = Probability
Ui.Command.ProbabilityDiagramCommand.Tooltip                           = Create a Probability
Ui.Command.ProblemNoteDiagramCommand.Label                             = Problem
Ui.Command.ProblemNoteDiagramCommand.Tooltip                           = Create a Problem Note
Ui.Command.PropertySpecificTypeDiagramCommand.Label                    = Property Specific Type
Ui.Command.PropertySpecificTypeDiagramCommand.Tooltip                  = Create a Property Specific Type
Ui.Command.PropertySpecificTypeExplorerCommand.Label                   = Property Specific Type
Ui.Command.PropertySpecificTypeExplorerCommand.Tooltip                 = Create a Property Specific Type
Ui.Command.QuantityKindDiagramCommand.Label                            = Quantity Kind
Ui.Command.QuantityKindDiagramCommand.Tooltip                          = Create a Quantity Kind
Ui.Command.QuantityKindExplorerCommand.Label                           = Quantity Kind
Ui.Command.QuantityKindExplorerCommand.Tooltip                         = Create a Quantity Kind
Ui.Command.RateEdgeDiagramCommand.Label                                = Rate
Ui.Command.RateEdgeDiagramCommand.Tooltip                              = Create a Rate Flow
Ui.Command.RateExplorerCommand.Label                                   = Rate
Ui.Command.RateExplorerCommand.Tooltip                                 = Create a Rate Parameter
Ui.Command.RateParameterDiagramCommand.Label                           = Rate
Ui.Command.RateParameterDiagramCommand.Tooltip                         = Create a Rate Parameter
Ui.Command.RateParameterExplorerCommand.Label                          = Rate
Ui.Command.RateParameterExplorerCommand.Tooltip                        = Create a Rate Parameter
Ui.Command.RationaleNoteDiagramCommand.Label                           = Rationale
Ui.Command.RationaleNoteDiagramCommand.Tooltip                         = Create a Rationale Note
Ui.Command.ReferenceDiagramCommand.Label                               = Reference
Ui.Command.ReferenceDiagramCommand.Tooltip                             = Create a Reference
Ui.Command.ReferenceExplorerCommand.Label                              = Reference
Ui.Command.ReferenceExplorerCommand.Tooltip                            = Create a Reference
Ui.Command.ReturnParameterExplorerCommand.Label                        = Return Parameter
Ui.Command.ReturnParameterExplorerCommand.Tooltip                      = Create a Return Parameter
Ui.Command.StateMachineExplorerCommand.Label                           = State Machine
Ui.Command.StateMachineExplorerCommand.Tooltip                         = Create a State Machine
Ui.Command.SysMLActivityDiagram.Name                                   = {0} Activity diagram
Ui.Command.SysMLActivityDiagramExplorerCommand.Details                 = Activity diagrams are used to represent business processes, or the dynamic part of a model.
Ui.Command.SysMLActivityDiagramExplorerCommand.Information             = Create a SysML Activity diagram
Ui.Command.SysMLActivityDiagramExplorerCommand.Label                   = Activity diagram
Ui.Command.SysMLActivityDiagramExplorerCommand.Name                    = {0} Activity diagram
Ui.Command.SysMLActivityDiagramExplorerCommand.Tooltip                 = Create an activity diagram
Ui.Command.SysMLDiagram.Label                                          = Create SysML diagram
Ui.Command.SysMLDiagram.Tooltip                                        = Create SysML diagram
Ui.Command.SysMLDiagramContextual.Label                                = SysML diagrams
Ui.Command.SysMLDiagramContextual.Tooltip                              = Create SysML diagram
Ui.Command.SysMLDiagramContributor.Label                               = SysML
Ui.Command.SysMLSequenceDiagram.Name                                   = {0} Sequence diagram
Ui.Command.SysMLSequenceDiagramExplorerCommand.Details                 = Sequence diagrams describe the sequence of the exchange of messages between several participants (instances, parts, ...).\r\nThey are used to illustrate a dynamic sequence, to model a protocol, to model tests, to trace an execution, to present a scenario of a use case.\r\nParticipants can be created by dragging and dropping classes, actors, ...\r\nThe sending of messages can be connected to the operations of the participants.\r\nSequence diagrams are typically created in a use case, an operation or a collaboration.
Ui.Command.SysMLSequenceDiagramExplorerCommand.Information             = Create a Sequence diagram
Ui.Command.SysMLSequenceDiagramExplorerCommand.Label                   = Sequence diagram
Ui.Command.SysMLSequenceDiagramExplorerCommand.Name                    = {0} Sequence diagram
Ui.Command.SysMLSequenceDiagramExplorerCommand.Tooltip                 = Create a Sequence diagram
Ui.Command.SysMLStateDiagram.Name                                      = {0} State Machine diagram
Ui.Command.SysMLStateMachineDiagramExplorerCommand.Details             = State Machine diagrams are a powerful dynamic formalization mechanism used to express several aspects of a class.\r\nCreated inside a class, they describe the reaction to events according to their current state.\r\nThey can also describe the usage protocol of a class. 
Ui.Command.SysMLStateMachineDiagramExplorerCommand.Information         = Create a State Machine diagram
Ui.Command.SysMLStateMachineDiagramExplorerCommand.Label               = State diagram
Ui.Command.SysMLStateMachineDiagramExplorerCommand.Name                = {0} State diagram
Ui.Command.SysMLStateMachineDiagramExplorerCommand.Tooltip             = Create a State Machine diagram
Ui.Command.SysMLUseCaseDiagram.Name                                    = {0} Use Case diagram
Ui.Command.SysMLUseCaseDiagramExplorerCommand.Details                  = Use Case diagrams are used to model the interactions between actors and a system.\r\nUse case diagrams show which actors communicate with which use cases, and the links between use cases (include, extend, ...).\r\nUse cases can be documented using predefined notes (pre and post conditions, description, exception). 
Ui.Command.SysMLUseCaseDiagramExplorerCommand.Information              = Create a Use Case diagram
Ui.Command.SysMLUseCaseDiagramExplorerCommand.Label                    = Usecase diagram
Ui.Command.SysMLUseCaseDiagramExplorerCommand.Name                     = {0} Usecase diagram
Ui.Command.SysMLUseCaseDiagramExplorerCommand.Tooltip                  = Create a Use Case diagram
Ui.Command.TestCaseExplorerCommand.Label                               = Test Case
Ui.Command.TestCaseExplorerCommand.Tooltip                             = Create a Test Case
Ui.Command.UMLAggregationDiagramCommand.Label                          = Aggregation
Ui.Command.UMLAggregationDiagramCommand.Tooltip                        = Create a Shared Aggregation
Ui.Command.UMLAssociationDiagramCommand.Label                          = Association
Ui.Command.UMLAssociationDiagramCommand.Tooltip                        = Create an Association
Ui.Command.UMLCompositionDiagramCommand.Label                          = Composition
Ui.Command.UMLCompositionDiagramCommand.Tooltip                        = Create an Composition Aggregation
Ui.Command.UMLGeneralizationDiagramCommand.Label                       = Generalization
Ui.Command.UMLGeneralizationDiagramCommand.Tooltip                     = Create an Generalization (Inheritance Link)
Ui.Command.UMLGeneralizationInterfaceRealizationDiagramCommand.Label   = Generalization or InterfaceRealization
Ui.Command.UMLGeneralizationInterfaceRealizationDiagramCommand.Tooltip = Create a Generalization or an Interface Realization depending on the type of elements to link.
Ui.Command.UMLOperationDiagramCommand.Label                            = Operation
Ui.Command.UMLOperationDiagramCommand.Tooltip                          = Create an Operation
Ui.Command.UnitDiagramCommand.Label                                    = Unit
Ui.Command.UnitDiagramCommand.Tooltip                                  = Create an Unit
Ui.Command.UnitExplorerCommand.Label                                   = Unit
Ui.Command.UnitExplorerCommand.Tooltip                                 = Create an Unit
Ui.Command.UseCaseExplorerCommand.Label                                = UseCase
Ui.Command.UseCaseExplorerCommand.Tooltip                              = Create a UseCase
Ui.Command.ValueExplorerCommand.Label                                  = Value
Ui.Command.ValueExplorerCommand.Tooltip                                = Create a value
Ui.Command.ValueTypeDiagramCommand.Label                               = Value Type
Ui.Command.ValueTypeDiagramCommand.Tooltip                             = Create a Value Type
Ui.Command.ValueTypeExplorerCommand.Label                              = Value Type
Ui.Command.ValueTypeExplorerCommand.Tooltip                            = Create a Value Type
Ui.Command.ViewDiagramCommand.Label                                    = View
Ui.Command.ViewDiagramCommand.Tooltip                                  = Create a View
Ui.Command.ViewExplorerCommand.Label                                   = View
Ui.Command.ViewExplorerCommand.Tooltip                                 = Create a View
Ui.Command.ViewpointDiagramCommand.Label                               = Viewpoint
Ui.Command.ViewpointDiagramCommand.Tooltip                             = Create a Viewpoint
Ui.Command.ViewpointExplorerCommand.Label                              = Viewpoint
Ui.Command.ViewpointExplorerCommand.Tooltip                            = Create a Viewpoint
Ui.Create.Activity.Name                                                = Activity
Ui.Create.Interaction.Name                                             = Interaction
Ui.Create.StateMachine.Name                                            = State Machine
Ui.Create.StateMachineDiagram.Name                                     = State machine
Ui.Create.UseCaseDiagram.Name                                          = Usecase
Ui.Derive.From                                                         = Derives
Ui.Derive.To                                                           = Derived from
Ui.Interaction.CreateGeneralization.BlockToClass                       = A Block must be specialized by Block. 
Ui.Interaction.CreateGeneralization.ClassToInterface                   = A Class can only inherit from another Class.
Ui.Interaction.CreateGeneralization.ConstraintBlockToClass             = A ConstraintBlock must be specialized by ConstraintBlock. 
Ui.Interaction.CreateGeneralization.InterfaceToClass                   = An Interface can only inherit from another Interface.
Ui.Interaction.CreateGeneralization.ValueTypeToClass                   = A ValueType must be specialized by ValueType. 
Ui.Messages.ConnectorPropertyOwnerMustBeBlock                          = ConnectorProperty may only be applied to properties of classes stereotyped by Block.
Ui.Messages.DistributedPropertyOwnerMustBeBlockOrValueType             = The DistributedProperty stereotype may be applied only to properties of classifiers stereotyped by Block or ValueType.
Ui.Messages.FlowPropertyTypeControl                                    = A FlowPort must be typed by a Flow Specification, Block, Signal, or ValueType.
Ui.Messages.FlowSpecificationCannotOwnOperations                       = Flow specifications cannot own operations or receptions (they can only own FlowProperties).
Ui.Messages.FlowSpecificationCannotOwnSimpleAttribute                  = Every "ownedAttribute" of a Flow Specification must be a Flow Property.
Ui.Messages.NameOfPropertySpecificTypeMustBeMissing                    = If a property owned by a SysML Block or SysML ValueType is typed by a SysML ValueType, \r\n then the aggregation attribute of the property must be "composite".
Ui.Messages.RequirementNotDeployed                                     = Analyst metamodel is not deployed.
Ui.Messages.ValueTypePropertyMustBeComposite                           = The DistributedProperty stereotype may be applied only to properties of classifiers stereotyped by Block or ValueType.
Ui.None                                                                = None
Ui.Part.From                                                           = Contains
Ui.Part.To                                                             = Part of
Ui.Property.Allocated_allocatedFrom.Name                               = Allocated from
Ui.Property.Allocated_allocatedTo.Name                                 = Allocated to
Ui.Property.Block_isEncapsulated.Name                                  = Encapsulated
Ui.Property.ConnectorProperty_connector.Name                           = Connector
Ui.Property.Equation.Name                                              = Equation
Ui.Property.FlowPort_direction.Name                                    = Direction
Ui.Property.FlowPort_isAtomic.Name                                     = Atomic
Ui.Property.FlowProperty_direction.Name                                = Direction
Ui.Property.ItemFlow_itemProperty.Name                                 = Item property
Ui.Property.NestedConnectorEnd_propertyPath.Name                       = Property path
Ui.Property.ParticipantProperty_AssociationEnd_end.Name                = End
Ui.Property.ParticipantProperty_BindableInstance_end.Name              = End
Ui.Property.Pin_isControl.Name                                         = Control
Ui.Property.Probability_probability.Name                               = Probability
Ui.Property.QuantityKind_description.Name                              = Description
Ui.Property.QuantityKind_descriptionURI.Name                           = Description URI
Ui.Property.QuantityKind_symbol.Name                                   = Symbol
Ui.Property.Rate_ActivityEdge_rate.Name                                = Rate
Ui.Property.Rate_Parameter_rate.Name                                   = Rate
Ui.Property.Unit_description.Name                                      = Description
Ui.Property.Unit_descriptionURI.Name                                   = Description URI
Ui.Property.Unit_quantityKind.Name                                     = Quantity kind
Ui.Property.Unit_symbol.Name                                           = Symbol
Ui.Property.ValueType_quantityKind.Name                                = Quantity kind
Ui.Property.ValueType_unit.Name                                        = Unit
Ui.Property.View_viewpoint.Name                                        = Viewpoint
Ui.Property.Viewpoint_concerns.Name                                    = Concerns
Ui.Property.Viewpoint_languages.Name                                   = Languages
Ui.Property.Viewpoint_methods.Name                                     = Methods
Ui.Property.Viewpoint_purpose.Name                                     = Purpose
Ui.Property.Viewpoint_stakeholders.Name                                = Stakeholders
Ui.Property.isConjugated.Name                                          = Conjugated
Ui.Property.isStream.Name                                              = Stream
Ui.Refine.From                                                         = Refined by
Ui.Refine.To                                                           = Refines
Ui.RequirementDiagram.Name                                             = {0} requirement diagram
Ui.Satisfy.From                                                        = Satisfied by
Ui.Satisfy.To                                                          = Satisfies
Ui.Stereotype                                                          = Stereotype
Ui.Trace.From                                                          = Linked to
Ui.Trace.To                                                            = Linked to
Ui.Verify.From                                                         = Verified by
Ui.Verify.To                                                           = Verifies
Ui.Viewpoint.Concerns                                                  = Concerns
Ui.Viewpoint.Languages                                                 = Languages
Ui.Viewpoint.Methods                                                   = Methods
Ui.Viewpoint.Purpose                                                   = Purpose
Ui.Viewpoint.Stakeholders                                              = Stakeholders

UseCasePaletteGroup.Common          = Common
UseCasePaletteGroup.InformationFlow = Information Flows

module.start.error.module = No license available for "{0}" module.\r\n\r\nDetail:\r\n{1}.\r\n\r\nFor more information, please contact Modeliosoft support team (support@modeliosoft.com).
module.start.error.title  = Couldn''t start "{0}".
